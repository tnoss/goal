// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Support",
            "email": "truchjkl@gmail.com"
        },
        "license": {
            "name": "MIT License",
            "url": "http://github.com/truc9/goal/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/asessments": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get all assessments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Booking"
                            }
                        }
                    }
                }
            }
        },
        "/api/asessments/:assessmentId": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Assessment",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/api/asessments/:assessmentId/versions": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/hse.AssessmentVersionModel"
                            }
                        }
                    }
                }
            }
        },
        "/api/assessments": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Assessment",
                "parameters": [
                    {
                        "description": "Create Assessment",
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hse.AssessmentModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/assessments/:assessmentId": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "summary": "Update Assessment",
                "responses": {}
            }
        },
        "/api/bookings": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Get all bookings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/booking.GrouppedUserBooking"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Submit booking",
                "parameters": [
                    {
                        "description": "Submit Booking",
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Booking"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Booking"
                        }
                    }
                }
            }
        },
        "/api/bookings/{bookingId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Delete booking",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "bookingId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/bookings/{bookingPeriodId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Get all bookings by Period ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking Period ID",
                        "name": "bookingPeriodId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Booking"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "booking.GrouppedUserBooking": {
            "type": "object",
            "properties": {
                "bookings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/booking.UserBookingItem"
                    }
                },
                "userDisplayName": {
                    "type": "string"
                }
            }
        },
        "booking.UserBookingItem": {
            "type": "object",
            "properties": {
                "bookingDate": {
                    "type": "string"
                },
                "bookingId": {
                    "type": "integer"
                },
                "bookingPeriodId": {
                    "type": "integer"
                },
                "userDisplayName": {
                    "type": "string"
                }
            }
        },
        "entity.Booking": {
            "type": "object",
            "properties": {
                "bookingPeriodId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "uid": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entity.User"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "entity.Role": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "employeeNumber": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "hashPassword": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/entity.Role"
                },
                "roleId": {
                    "type": "integer"
                },
                "uid": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "hse.AssessmentModel": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "integer"
                }
            }
        },
        "hse.AssessmentVersionModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "questionCount": {
                    "type": "integer"
                },
                "version": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "GOAL Swagger API",
	Description:      "This is a simple office management REST API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
